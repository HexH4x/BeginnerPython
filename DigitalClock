# Created by: HexH4x
# Last modified: 1/10/25
# Purpose:
# Digital clock with world time,
# 12/24 hr toggle, and 3 color themes

import tkinter as tk
from time import strftime
from tkinter import StringVar
from datetime import datetime
import pytz

# Main window
root = tk.Tk()
root.title("Enhanced Digital Clock")
root.config(bg="black")

# Variable to toggle between 12-hour and 24-hour formats
time_format = StringVar(value="24") #Default is 24-hour format


# Clock label
clock_label = tk.Label(root, font=("calibri", 40, "bold"), background="black", foreground="white")
clock_label.pack(anchor="center", pady=10)

# Date label
date_label = tk.Label(root, font=("calibri", 20, "bold"), bg="black", fg="lightblue")
date_label.pack(anchor="center",pady=10)

# Function to toggle time format
def toggle_time_format():
    if time_format.get() == "24":
        time_format.set("12")
    else:
        time_format.set("24")
    update_time()


# Function to update time and date
def update_time():
    if time_format.get() == "24":
        current_time = strftime("%H:%M:%S") # 24-hour format
    else:
        current_time = strftime("%I:%M:%S %p") # 12-hour format

    current_date = strftime("%A, %B %d, %Y") # Format day, month date, year
    clock_label.config(text=current_time)
    date_label.config(text=current_date)
    clock_label.after(1000, update_time) #Update every second

# Toggle button
toggle_button = tk.Button(
    root,
    text="Toggle 12/24 Hour Format",
    command=toggle_time_format,
    font=("calibri", 12),
    background="gray",
    foreground="white"
)
toggle_button.pack(anchor="center", pady=10)

# Function to define world clock
def update_world_clock():
    london_time = datetime.now(pytz.timezone('Europe/London')).strftime("%H:%M:%S")
    new_york_time = datetime.now(pytz.timezone('America/New_York')).strftime("%H:%M:%S")
    world_clock_label.config(text=f"London: {london_time} | New York: {new_york_time}")
    root.after(1000, update_world_clock)

# World clock label
world_clock_label = tk.Label(root, font=("calibri", 16), bg="black", fg="orange")
world_clock_label.pack(anchor="center", pady=10)

# Function to define change theme
def change_theme(theme):
    if theme == "Dark":
        root.config(bg="black")
        clock_label.config(bg="black", fg="white")
        date_label.config(bg="black", fg="lightblue")
        world_clock_label.config(bg="black", fg="white")
    elif theme == "Light":
        root.config(bg="white")
        clock_label.config(bg="white", fg="black")
        date_label.config(bg="white", fg="blue")
        world_clock_label.config(bg="white", fg="black")
    elif theme == "Colorful":
        root.config(bg="purple")
        clock_label.config(bg="purple", fg="yellow")
        date_label.config(bg="purple", fg="pink")
        world_clock_label.config(bg="purple", fg="blue")

# Menu to select themes
theme_menu = tk.Menu(root)
root.config(menu=theme_menu)
theme_menu.add_command(label="Dark Theme", command=lambda: change_theme("Dark"))
theme_menu.add_command(label="Light Theme", command=lambda: change_theme("Light"))
theme_menu.add_command(label="Colorful Theme", command=lambda: change_theme("Colorful"))

# Start world clock
update_world_clock()

# Start the clock
update_time()

# Run the application
root.mainloop()
